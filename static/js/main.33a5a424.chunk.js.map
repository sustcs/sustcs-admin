{"version":3,"sources":["ShoppingList.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["ShoppingList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","date","Date","console","log","_this2","_react_16_8_6_react_default","a","createElement","className","name","toLocaleDateString","alt","title","src","children","onClick","setState","React","Component","TabPane","tabs","TreeNode","MyInput","_ref","_ref$value","onChange","Content","text","activeKey","expandedKeys","onTextChange","event","target","onTextReset","onTabChange","onExpand","onSelect","selectedKeys","key","includes","filter","k","concat","toConsumableArray","picture","src_ShoppingList","card","style","width","margin","boxShadow","border","actions","Meta","avatar","height","borderRadius","description","Content_MyInput","tab","tree","Header","Footer","Index","textAlign","padding","lib_default","size","About","Topic","match","params","id","Users","_ref2","react_router_dom","to","url","react_router","path","component","exact","render","App","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","Item","App_Content","row","type","justify","align","background","Example","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33a5a424.chunk.js","sourcesContent":["import React from 'react';\n\nclass ShoppingList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n      date: new Date()\n    };\n  }\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n  render() {\n    return (\n      <div className=\"shopping-list\">\n        <h1>Shopping List for {this.props.name}</h1>\n        <h2>It is {this.state.date.toLocaleDateString()}</h2>\n        <img alt={this.props.title} src={this.props.src} />\n        {this.props.children}\n        <ul>\n          <li>Instagram</li>\n          <li>WhatsApp</li>\n          <li>Oculus</li>\n        </ul>\n        <button\n          className=\"square\"\n          onClick={() => this.setState({ value: 'X' })}\n        >\n          {this.state.value}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingList;\n","import React from 'react';\nimport ShoppingList from './ShoppingList';\nimport { Card, Tabs, Tree } from 'antd';\nconst TabPane = Tabs.TabPane;\nconst { TreeNode } = Tree;\nconst MyInput = ({ value = '', onChange }) => (\n  <input onChange={onChange} value={value} />\n);\nclass Content extends React.Component {\n  state = {\n    text: '',\n    activeKey: '',\n    expandedKeys: []\n  };\n  onTextChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n  };\n  onTextReset = () => {\n    this.setState({\n      text: ''\n    });\n  };\n  onTabChange = activeKey => {\n    activeKey = activeKey % 2 === 1 ? '2' : '1';\n    console.log(activeKey);\n    this.setState({ activeKey: activeKey }); //?\n  };\n  onExpand = expandedKeys => {\n    this.setState({\n      expandedKeys\n    });\n  };\n  onSelect = selectedKeys => {\n    const { expandedKeys } = this.state;\n    const key = selectedKeys[0];\n    if (expandedKeys.includes(key)) {\n      this.setState({\n        expandedKeys: expandedKeys.filter(k => k !== key)\n      });\n    } else {\n      this.setState({\n        expandedKeys: [...expandedKeys, key]\n      });\n    }\n  };\n  render() {\n    const style = {\n      width: '400px',\n      margin: '30px',\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)',\n      border: '1px solid #e8e8e8'\n    };\n    const picture = {\n      title: 'cover',\n      src:\n        'https://cdn.nlark.com/yuque/0/2018/jpeg/84141/1536207007004-59352a41-4ad8-409b-a416-a4f324eb6d0b.jpeg'\n    };\n\n    return (\n      <div>\n        <ShoppingList name=\"test\" alt={picture.title} src={picture.src}>\n          {picture.title}\n        </ShoppingList>\n        <Card style={style} actions={[<p>action 1</p>, <p>action 2</p>]}>\n          <Card.Meta\n            avatar={\n              <img\n                alt=\"\"\n                style={{ width: '64px', height: '64px', borderRadius: '32px' }}\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png\"\n              />\n            }\n            title=\"Alipay\"\n            description=\"this is a test\"\n          />\n        </Card>\n        <MyInput onChange={this.onTextChange} value={this.state.text} />\n        <button onClick={this.onTextReset}>Reset</button>\n        <Tabs activeKey={this.state.activeKey} onChange={this.onTabChange}>\n          <TabPane tab=\"Tab 1\" key=\"1\">\n            Content of Tab Pane 1\n          </TabPane>\n          <TabPane tab=\"Tab 2\" key=\"2\">\n            Content of Tab Pane 2\n          </TabPane>\n        </Tabs>\n        <Tree\n          expandedKeys={this.state.expandedKeys}\n          selectedKeys={[]}\n          onExpand={this.onExpand}\n          onSelect={this.onSelect}\n        >\n          <TreeNode title=\"parent 1\" key=\"0-0\">\n            <TreeNode title=\"leaf\" key=\"0-0-0\" />\n            <TreeNode title=\"leaf\" key=\"0-0-1\" />\n          </TreeNode>\n        </Tree>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport QRCode from 'qrcode.react';\nimport { Layout, Menu, Row } from 'antd';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Example from './Content';\nconst { Header, Content, Footer } = Layout;\nfunction Index() {\n  return (\n    <div style={{ textAlign: 'center', padding: 24 }}>\n      <h2>Please scan the QRcode to log in</h2>\n      <QRCode\n        style={{ margin: '20px' }}\n        value={'http://picturesofpeoplescanningqrcodes.tumblr.com/'}\n        size={200}\n      />\n    </div>\n  );\n}\nfunction About() {\n  return <h2>About</h2>;\n}\nfunction Topic({ match }) {\n  return <h3>Requested Param: {match.params.id}</h3>;\n}\nfunction Users({ match }) {\n  return (\n    <div>\n      <h2>Topics</h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n        </li>\n      </ul>\n\n      <Route path={`${match.path}/:id`} component={Topic} />\n      <Route\n        exact\n        path={match.path}\n        render={() => <h3>Please select a topic.</h3>}\n      />\n    </div>\n  );\n}\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Layout className=\"layout\">\n          <Header>\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              defaultSelectedKeys={['1']}\n              style={{ lineHeight: '64px' }}\n            >\n              <Menu.Item key=\"1\">\n                <Link to=\"/\">Home</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/about/\">About</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/users/\">Users</Link>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <Link to=\"/example/\">Example</Link>\n              </Menu.Item>\n            </Menu>\n          </Header>\n          <Content className=\"content\">\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n              <div style={{ background: '#fff', margin: 24, padding: 24 }}>\n                <Route path=\"/\" exact component={Index} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/users\" component={Users} />\n                <Route path=\"/example\" component={Example} />\n              </div>\n            </Row>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>\n            SUSTCS ©2019 Created by Makergyt\n          </Footer>\n        </Layout>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}